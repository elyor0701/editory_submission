syntax="proto3";

package content_service;
option go_package="genproto/content_service";

import "google/protobuf/empty.proto";
import "subject.proto";

service ContentService {
  // Journal
  rpc CreateJournal(CreateJournalReq) returns (Journal) {}
  rpc GetJournal(PrimaryKey) returns (Journal) {}
  rpc GetJournalList(GetList) returns (GetJournalListRes) {}
  rpc UpdateJournal(Journal) returns (Journal) {}
  rpc DeleteJournal(PrimaryKey) returns (google.protobuf.Empty) {}

  // Edition
  rpc CreateEdition(CreateEditionReq) returns (Edition) {}
  rpc GetEdition(PrimaryKey) returns (Edition) {}
  rpc GetEditionList(GetEditionListReq) returns (GetEditionListRes) {}
  rpc UpdateEdition(Edition) returns (Edition) {}
  rpc DeleteEdition(PrimaryKey) returns (google.protobuf.Empty) {}

  // Countries and cities
  rpc GetCountryList(GetCountryListReq) returns (GetCountryListRes) {}
  rpc GetCityList(GetCityListReq) returns (GetCityListRes) {}
}

message Country {
  string id = 1;
  string title = 2;
  string title_uz = 3;
  string title_ru = 4;
}

message City {
  string id = 1;
  string title = 2;
  string title_uz = 3;
  string title_ru = 4;
  string country_id = 5;
}

message GetCountryListReq {
  int32 limit = 1;
  int32 offset = 2;
  string search = 3;
}

message GetCountryListRes {
  repeated Country countries = 1;
  int32 count = 2;
}

message GetCityListReq {
  int32 limit = 1;
  int32 offset = 2;
  string search = 3;
  string country_id = 4;
}

message GetCityListRes {
  repeated City cities = 1;
  int32 count = 2;
}

message PrimaryKey {
  string id = 1;
}

message PrimaryKeyList {
  repeated string ids = 1;
}

message GetList {
  int32 limit = 1;
  int32 offset = 2;
  string search = 3;
  string status = 4;
  string date_from = 5;
  string date_to = 6;
  string sort = 7;
}

message Journal {
  message Author {
    string id = 1;
    string email = 2;
    string first_name = 3;
    string last_name = 4;
  }
  string id = 1;
  string cover_photo = 2;
  string title = 3;
  bool access = 4;
  string description = 5;
  int32 price = 6;
  string isbn = 7;
  string status = 8;
  string created_at = 9;
  string updated_at = 10;
  repeated JournalData journal_data = 11;
  string acceptance_rate = 12;
  string submission_to_final_decision = 13;
  string acceptance_to_publication = 14;
  string citation_indicator = 15;
  string impact_factor = 16;
  repeated Subject subjects = 17;
  string author_id = 18;
  Author author = 19;
  string short_description = 20;
}

message JournalData {
  string journal_id = 1;
  string text = 2;
  string type = 3;
  string short_text = 4;
}

message CreateJournalReq {
  string cover_photo = 2;
  string title = 3;
  bool access = 4;
  string description = 5;
  int32 price = 6;
  string isbn = 7;
  string author_id = 8;
  string status = 9;
  repeated JournalData journal_data = 10;
  string acceptance_rate = 11;
  string submission_to_final_decision = 12;
  string acceptance_to_publication = 13;
  string citation_indicator = 14;
  string impact_factor = 15;
  repeated Subject subjects = 16;
}

message GetJournalListRes {
  repeated Journal journals = 1;
  int32 count = 2;
}

message Edition {
  string id = 1;
  string journal_id = 2;
  int32 edition = 3;
  string file = 4;
  string created_at = 5;
  string updated_at = 6;
  string title = 7;
  string description = 8;
}

message CreateEditionReq {
  string journal_id = 1;
  int32 edition = 2;
  string file = 3;
  string title = 4;
  string description = 5;
}

message GetEditionListReq {
  int32 limit = 1;
  int32 offset = 2;
  string search = 3;
  string journal_id = 4;
}

message GetEditionListRes {
  repeated Edition editions = 1;
  int32 count = 2;
}
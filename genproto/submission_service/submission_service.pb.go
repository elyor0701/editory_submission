// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.17.3
// source: submission_service.proto

package submission_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Checker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email     string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	FirstName string `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
}

func (x *Checker) Reset() {
	*x = Checker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submission_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Checker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Checker) ProtoMessage() {}

func (x *Checker) ProtoReflect() protoreflect.Message {
	mi := &file_submission_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Checker.ProtoReflect.Descriptor instead.
func (*Checker) Descriptor() ([]byte, []int) {
	return file_submission_service_proto_rawDescGZIP(), []int{0}
}

func (x *Checker) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Checker) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Checker) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Checker) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

type CreateArticleCheckerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckerId string         `protobuf:"bytes,1,opt,name=checker_id,json=checkerId,proto3" json:"checker_id,omitempty"`
	ArticleId string         `protobuf:"bytes,2,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	Status    string         `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Comment   string         `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	Type      string         `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Comments  []*FileComment `protobuf:"bytes,6,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *CreateArticleCheckerReq) Reset() {
	*x = CreateArticleCheckerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submission_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArticleCheckerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticleCheckerReq) ProtoMessage() {}

func (x *CreateArticleCheckerReq) ProtoReflect() protoreflect.Message {
	mi := &file_submission_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticleCheckerReq.ProtoReflect.Descriptor instead.
func (*CreateArticleCheckerReq) Descriptor() ([]byte, []int) {
	return file_submission_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateArticleCheckerReq) GetCheckerId() string {
	if x != nil {
		return x.CheckerId
	}
	return ""
}

func (x *CreateArticleCheckerReq) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *CreateArticleCheckerReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateArticleCheckerReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CreateArticleCheckerReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateArticleCheckerReq) GetComments() []*FileComment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type CreateArticleCheckerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CheckerId string         `protobuf:"bytes,2,opt,name=checker_id,json=checkerId,proto3" json:"checker_id,omitempty"`
	ArticleId string         `protobuf:"bytes,3,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	Status    string         `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Comment   string         `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Type      string         `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	CreatedAt string         `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string         `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Comments  []*FileComment `protobuf:"bytes,9,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *CreateArticleCheckerRes) Reset() {
	*x = CreateArticleCheckerRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submission_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArticleCheckerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticleCheckerRes) ProtoMessage() {}

func (x *CreateArticleCheckerRes) ProtoReflect() protoreflect.Message {
	mi := &file_submission_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticleCheckerRes.ProtoReflect.Descriptor instead.
func (*CreateArticleCheckerRes) Descriptor() ([]byte, []int) {
	return file_submission_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateArticleCheckerRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateArticleCheckerRes) GetCheckerId() string {
	if x != nil {
		return x.CheckerId
	}
	return ""
}

func (x *CreateArticleCheckerRes) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *CreateArticleCheckerRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateArticleCheckerRes) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CreateArticleCheckerRes) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateArticleCheckerRes) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CreateArticleCheckerRes) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CreateArticleCheckerRes) GetComments() []*FileComment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type GetArticleCheckerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetArticleCheckerReq) Reset() {
	*x = GetArticleCheckerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submission_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleCheckerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleCheckerReq) ProtoMessage() {}

func (x *GetArticleCheckerReq) ProtoReflect() protoreflect.Message {
	mi := &file_submission_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleCheckerReq.ProtoReflect.Descriptor instead.
func (*GetArticleCheckerReq) Descriptor() ([]byte, []int) {
	return file_submission_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetArticleCheckerReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetArticleCheckerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CheckerId     string         `protobuf:"bytes,2,opt,name=checker_id,json=checkerId,proto3" json:"checker_id,omitempty"`
	ArticleId     string         `protobuf:"bytes,3,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	Status        string         `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Comment       string         `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Type          string         `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	CreatedAt     string         `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string         `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Comments      []*FileComment `protobuf:"bytes,9,rep,name=comments,proto3" json:"comments,omitempty"`
	ArticleIdData *Article       `protobuf:"bytes,11,opt,name=article_id_data,json=articleIdData,proto3" json:"article_id_data,omitempty"`
	CheckerIdData *Checker       `protobuf:"bytes,12,opt,name=checker_id_data,json=checkerIdData,proto3" json:"checker_id_data,omitempty"`
}

func (x *GetArticleCheckerRes) Reset() {
	*x = GetArticleCheckerRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submission_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleCheckerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleCheckerRes) ProtoMessage() {}

func (x *GetArticleCheckerRes) ProtoReflect() protoreflect.Message {
	mi := &file_submission_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleCheckerRes.ProtoReflect.Descriptor instead.
func (*GetArticleCheckerRes) Descriptor() ([]byte, []int) {
	return file_submission_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetArticleCheckerRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetArticleCheckerRes) GetCheckerId() string {
	if x != nil {
		return x.CheckerId
	}
	return ""
}

func (x *GetArticleCheckerRes) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *GetArticleCheckerRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetArticleCheckerRes) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *GetArticleCheckerRes) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetArticleCheckerRes) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetArticleCheckerRes) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetArticleCheckerRes) GetComments() []*FileComment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *GetArticleCheckerRes) GetArticleIdData() *Article {
	if x != nil {
		return x.ArticleIdData
	}
	return nil
}

func (x *GetArticleCheckerRes) GetCheckerIdData() *Checker {
	if x != nil {
		return x.CheckerIdData
	}
	return nil
}

type GetArticleCheckerListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit     int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset    int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Search    string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	CheckerId string `protobuf:"bytes,4,opt,name=checker_id,json=checkerId,proto3" json:"checker_id,omitempty"`
	ArticleId string `protobuf:"bytes,5,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	Type      string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Status    string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetArticleCheckerListReq) Reset() {
	*x = GetArticleCheckerListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submission_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleCheckerListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleCheckerListReq) ProtoMessage() {}

func (x *GetArticleCheckerListReq) ProtoReflect() protoreflect.Message {
	mi := &file_submission_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleCheckerListReq.ProtoReflect.Descriptor instead.
func (*GetArticleCheckerListReq) Descriptor() ([]byte, []int) {
	return file_submission_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetArticleCheckerListReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetArticleCheckerListReq) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetArticleCheckerListReq) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetArticleCheckerListReq) GetCheckerId() string {
	if x != nil {
		return x.CheckerId
	}
	return ""
}

func (x *GetArticleCheckerListReq) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *GetArticleCheckerListReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetArticleCheckerListReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetArticleCheckerListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleCheckers []*GetArticleCheckerListRes_ArticleChecker `protobuf:"bytes,1,rep,name=article_checkers,json=articleCheckers,proto3" json:"article_checkers,omitempty"`
	Count           int32                                      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetArticleCheckerListRes) Reset() {
	*x = GetArticleCheckerListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submission_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleCheckerListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleCheckerListRes) ProtoMessage() {}

func (x *GetArticleCheckerListRes) ProtoReflect() protoreflect.Message {
	mi := &file_submission_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleCheckerListRes.ProtoReflect.Descriptor instead.
func (*GetArticleCheckerListRes) Descriptor() ([]byte, []int) {
	return file_submission_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetArticleCheckerListRes) GetArticleCheckers() []*GetArticleCheckerListRes_ArticleChecker {
	if x != nil {
		return x.ArticleCheckers
	}
	return nil
}

func (x *GetArticleCheckerListRes) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UpdateArticleCheckerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CheckerId string         `protobuf:"bytes,2,opt,name=checker_id,json=checkerId,proto3" json:"checker_id,omitempty"`
	ArticleId string         `protobuf:"bytes,3,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	Status    string         `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Comment   string         `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Type      string         `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	CreatedAt string         `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string         `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Comments  []*FileComment `protobuf:"bytes,9,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *UpdateArticleCheckerReq) Reset() {
	*x = UpdateArticleCheckerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submission_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArticleCheckerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArticleCheckerReq) ProtoMessage() {}

func (x *UpdateArticleCheckerReq) ProtoReflect() protoreflect.Message {
	mi := &file_submission_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArticleCheckerReq.ProtoReflect.Descriptor instead.
func (*UpdateArticleCheckerReq) Descriptor() ([]byte, []int) {
	return file_submission_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateArticleCheckerReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateArticleCheckerReq) GetCheckerId() string {
	if x != nil {
		return x.CheckerId
	}
	return ""
}

func (x *UpdateArticleCheckerReq) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *UpdateArticleCheckerReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateArticleCheckerReq) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *UpdateArticleCheckerReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateArticleCheckerReq) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *UpdateArticleCheckerReq) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *UpdateArticleCheckerReq) GetComments() []*FileComment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type UpdateArticleCheckerRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CheckerId string         `protobuf:"bytes,2,opt,name=checker_id,json=checkerId,proto3" json:"checker_id,omitempty"`
	ArticleId string         `protobuf:"bytes,3,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	Status    string         `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Comment   string         `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Type      string         `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	CreatedAt string         `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string         `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Comments  []*FileComment `protobuf:"bytes,9,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *UpdateArticleCheckerRes) Reset() {
	*x = UpdateArticleCheckerRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submission_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArticleCheckerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArticleCheckerRes) ProtoMessage() {}

func (x *UpdateArticleCheckerRes) ProtoReflect() protoreflect.Message {
	mi := &file_submission_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArticleCheckerRes.ProtoReflect.Descriptor instead.
func (*UpdateArticleCheckerRes) Descriptor() ([]byte, []int) {
	return file_submission_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateArticleCheckerRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateArticleCheckerRes) GetCheckerId() string {
	if x != nil {
		return x.CheckerId
	}
	return ""
}

func (x *UpdateArticleCheckerRes) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *UpdateArticleCheckerRes) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateArticleCheckerRes) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *UpdateArticleCheckerRes) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateArticleCheckerRes) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *UpdateArticleCheckerRes) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *UpdateArticleCheckerRes) GetComments() []*FileComment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type DeleteArticleCheckerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteArticleCheckerReq) Reset() {
	*x = DeleteArticleCheckerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submission_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteArticleCheckerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArticleCheckerReq) ProtoMessage() {}

func (x *DeleteArticleCheckerReq) ProtoReflect() protoreflect.Message {
	mi := &file_submission_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArticleCheckerReq.ProtoReflect.Descriptor instead.
func (*DeleteArticleCheckerReq) Descriptor() ([]byte, []int) {
	return file_submission_service_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteArticleCheckerReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetArticleCheckerListRes_ArticleChecker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CheckerId     string   `protobuf:"bytes,2,opt,name=checker_id,json=checkerId,proto3" json:"checker_id,omitempty"`
	ArticleId     string   `protobuf:"bytes,3,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	Status        string   `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	Comment       string   `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Type          string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	CreatedAt     string   `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string   `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ArticleIdData *Article `protobuf:"bytes,9,opt,name=article_id_data,json=articleIdData,proto3" json:"article_id_data,omitempty"`
	CheckerIdData *Checker `protobuf:"bytes,10,opt,name=checker_id_data,json=checkerIdData,proto3" json:"checker_id_data,omitempty"`
}

func (x *GetArticleCheckerListRes_ArticleChecker) Reset() {
	*x = GetArticleCheckerListRes_ArticleChecker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_submission_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleCheckerListRes_ArticleChecker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleCheckerListRes_ArticleChecker) ProtoMessage() {}

func (x *GetArticleCheckerListRes_ArticleChecker) ProtoReflect() protoreflect.Message {
	mi := &file_submission_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleCheckerListRes_ArticleChecker.ProtoReflect.Descriptor instead.
func (*GetArticleCheckerListRes_ArticleChecker) Descriptor() ([]byte, []int) {
	return file_submission_service_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GetArticleCheckerListRes_ArticleChecker) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetArticleCheckerListRes_ArticleChecker) GetCheckerId() string {
	if x != nil {
		return x.CheckerId
	}
	return ""
}

func (x *GetArticleCheckerListRes_ArticleChecker) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *GetArticleCheckerListRes_ArticleChecker) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetArticleCheckerListRes_ArticleChecker) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *GetArticleCheckerListRes_ArticleChecker) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetArticleCheckerListRes_ArticleChecker) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetArticleCheckerListRes_ArticleChecker) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetArticleCheckerListRes_ArticleChecker) GetArticleIdData() *Article {
	if x != nil {
		return x.ArticleIdData
	}
	return nil
}

func (x *GetArticleCheckerListRes_ArticleChecker) GetCheckerIdData() *Checker {
	if x != nil {
		return x.CheckerIdData
	}
	return nil
}

var File_submission_service_proto protoreflect.FileDescriptor

var file_submission_service_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a,
	0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xda, 0x01, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xa8, 0x02, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xaf, 0x03, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x43, 0x0a, 0x0f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x49, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x0d, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0xca, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x87, 0x04, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x10, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x0f, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xec, 0x02, 0x0a, 0x0e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x43, 0x0a, 0x0f, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x0d, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x43,
	0x0a, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x22, 0xa8, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x3b, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xa8,
	0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x32, 0xb9, 0x04, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x72, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x12,
	0x2b, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x12, 0x28, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2c, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x72, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22,
	0x00, 0x12, 0x5d, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x42, 0x1d, 0x5a, 0x1b, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_submission_service_proto_rawDescOnce sync.Once
	file_submission_service_proto_rawDescData = file_submission_service_proto_rawDesc
)

func file_submission_service_proto_rawDescGZIP() []byte {
	file_submission_service_proto_rawDescOnce.Do(func() {
		file_submission_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_submission_service_proto_rawDescData)
	})
	return file_submission_service_proto_rawDescData
}

var file_submission_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_submission_service_proto_goTypes = []interface{}{
	(*Checker)(nil),                                 // 0: submission_service.Checker
	(*CreateArticleCheckerReq)(nil),                 // 1: submission_service.CreateArticleCheckerReq
	(*CreateArticleCheckerRes)(nil),                 // 2: submission_service.CreateArticleCheckerRes
	(*GetArticleCheckerReq)(nil),                    // 3: submission_service.GetArticleCheckerReq
	(*GetArticleCheckerRes)(nil),                    // 4: submission_service.GetArticleCheckerRes
	(*GetArticleCheckerListReq)(nil),                // 5: submission_service.GetArticleCheckerListReq
	(*GetArticleCheckerListRes)(nil),                // 6: submission_service.GetArticleCheckerListRes
	(*UpdateArticleCheckerReq)(nil),                 // 7: submission_service.UpdateArticleCheckerReq
	(*UpdateArticleCheckerRes)(nil),                 // 8: submission_service.UpdateArticleCheckerRes
	(*DeleteArticleCheckerReq)(nil),                 // 9: submission_service.DeleteArticleCheckerReq
	(*GetArticleCheckerListRes_ArticleChecker)(nil), // 10: submission_service.GetArticleCheckerListRes.ArticleChecker
	(*FileComment)(nil),                             // 11: submission_service.FileComment
	(*Article)(nil),                                 // 12: submission_service.Article
	(*emptypb.Empty)(nil),                           // 13: google.protobuf.Empty
}
var file_submission_service_proto_depIdxs = []int32{
	11, // 0: submission_service.CreateArticleCheckerReq.comments:type_name -> submission_service.FileComment
	11, // 1: submission_service.CreateArticleCheckerRes.comments:type_name -> submission_service.FileComment
	11, // 2: submission_service.GetArticleCheckerRes.comments:type_name -> submission_service.FileComment
	12, // 3: submission_service.GetArticleCheckerRes.article_id_data:type_name -> submission_service.Article
	0,  // 4: submission_service.GetArticleCheckerRes.checker_id_data:type_name -> submission_service.Checker
	10, // 5: submission_service.GetArticleCheckerListRes.article_checkers:type_name -> submission_service.GetArticleCheckerListRes.ArticleChecker
	11, // 6: submission_service.UpdateArticleCheckerReq.comments:type_name -> submission_service.FileComment
	11, // 7: submission_service.UpdateArticleCheckerRes.comments:type_name -> submission_service.FileComment
	12, // 8: submission_service.GetArticleCheckerListRes.ArticleChecker.article_id_data:type_name -> submission_service.Article
	0,  // 9: submission_service.GetArticleCheckerListRes.ArticleChecker.checker_id_data:type_name -> submission_service.Checker
	1,  // 10: submission_service.CheckerService.CreateArticleChecker:input_type -> submission_service.CreateArticleCheckerReq
	3,  // 11: submission_service.CheckerService.GetArticleChecker:input_type -> submission_service.GetArticleCheckerReq
	5,  // 12: submission_service.CheckerService.GetArticleCheckerList:input_type -> submission_service.GetArticleCheckerListReq
	7,  // 13: submission_service.CheckerService.UpdateArticleChecker:input_type -> submission_service.UpdateArticleCheckerReq
	9,  // 14: submission_service.CheckerService.DeleteArticleChecker:input_type -> submission_service.DeleteArticleCheckerReq
	2,  // 15: submission_service.CheckerService.CreateArticleChecker:output_type -> submission_service.CreateArticleCheckerRes
	4,  // 16: submission_service.CheckerService.GetArticleChecker:output_type -> submission_service.GetArticleCheckerRes
	6,  // 17: submission_service.CheckerService.GetArticleCheckerList:output_type -> submission_service.GetArticleCheckerListRes
	8,  // 18: submission_service.CheckerService.UpdateArticleChecker:output_type -> submission_service.UpdateArticleCheckerRes
	13, // 19: submission_service.CheckerService.DeleteArticleChecker:output_type -> google.protobuf.Empty
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_submission_service_proto_init() }
func file_submission_service_proto_init() {
	if File_submission_service_proto != nil {
		return
	}
	file_submission_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_submission_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Checker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submission_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArticleCheckerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submission_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArticleCheckerRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submission_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleCheckerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submission_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleCheckerRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submission_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleCheckerListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submission_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleCheckerListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submission_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArticleCheckerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submission_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArticleCheckerRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submission_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteArticleCheckerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_submission_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleCheckerListRes_ArticleChecker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_submission_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_submission_service_proto_goTypes,
		DependencyIndexes: file_submission_service_proto_depIdxs,
		MessageInfos:      file_submission_service_proto_msgTypes,
	}.Build()
	File_submission_service_proto = out.File
	file_submission_service_proto_rawDesc = nil
	file_submission_service_proto_goTypes = nil
	file_submission_service_proto_depIdxs = nil
}
